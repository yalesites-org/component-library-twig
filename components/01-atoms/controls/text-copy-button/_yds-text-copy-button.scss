@use 'sass:selector';
@use '~@yalesites-org/tokens/build/scss/tokens' as sass-tokens;
@use '../../../00-tokens/functions/map';
@use '../../../00-tokens/tokens';
@use '../../../01-atoms/controls/button/yds-button' as button;

$text-copy-button-themes: map.deep-get(sass-tokens.$tokens, color, link, theme);
$global-text-copy-button-themes: map.deep-get(tokens.$tokens, 'global-themes');

.text-copy-button {
  // Component themes
  @each $theme, $value in $text-copy-button-themes {
    [data-basic-theme='#{$theme}'] {
      --color-link-base: var(--color-link-theme-#{$theme}-base);
      --color-link-hover: var(--color-link-theme-#{$theme}-hover);
    }
  }

  // Global themes: set color slots for each theme
  // This establishes `--color-slot-` variables name-spaced to the selector
  // in which it is used. We can map component-level variables to global-level
  // `--color-slot-` variables.
  @each $globalTheme, $value in $global-text-copy-button-themes {
    [data-global-theme='#{$globalTheme}'] & {
      --color-slot-one: var(--global-themes-#{$globalTheme}-colors-slot-one);
      --color-slot-two: var(--global-themes-#{$globalTheme}-colors-slot-two);
      --color-slot-three: var(
        --global-themes-#{$globalTheme}-colors-slot-three
      );
      --color-slot-four: var(--global-themes-#{$globalTheme}-colors-slot-four);
      --color-slot-five: var(--global-themes-#{$globalTheme}-colors-slot-five);
      --color-link-hover: var(--color-slot-two);
    }
  }
}

.text-copy-button__button {
  @include button.reset;

  color: var(--color-link-base);
  font-weight: var(--font-weights-mallory-medium);
  line-height: normal;
  cursor: pointer;
  text-underline-offset: 0.22rem;

  &:hover {
    color: var(--color-link-hover);
    text-decoration: underline;
    text-decoration-thickness: 0.1em;
  }
}
