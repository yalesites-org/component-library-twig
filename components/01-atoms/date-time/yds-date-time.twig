{# Remove white space caused by all of the new lines in this file. #}
{% apply spaceless %}

{#
 # Logic Variables:
 # - date_time__format: 'time', 'date', 'day__full', or null (default. Returns date and time.)
 #
 # Available Variables:
 # - date_time__all_day
 # - date_time__start
 # - date_time__end
 # - date_time__format_override
 #}

{# Set the end date to the start date, by default, so that Twig doesn't
 # erroneously use "today" like it does when no date is provided.
 # In the logic below we filter for "When start and end are the same, which, in
 # combination with this, accounts for "no end date provided" as well. #}
{% set date_time__end = date_time__end|default(date_time__start) %}
{% set same_start_and_end = date_time__start == date_time__end %}
{% set date_time__format = date_time__format|default('date_and_time') %}

{% if date_time__all_day == true %}
  {% set date_time__format = "all_day" %}
{% endif %}

{# Use a variable to ensure emdash is properly placed consistently #}
{% set em_dash = 'â€”' %}

{# Date/Time formats used in this file

format__iso = 'c' {# 2022-04-01T08:34:42+00:00
format__html_date = 2022-04-01
format__date = April 1, 2022
format__day__full__start = Fri Apr 1
format__day__full = Fri Apr, 1 2022
format__time__start = 8:30 pm-
format__time = 11:30 pm
format__all_day = All Day
format__day__long = Thursday, December 3, 2024

#}

{% set formats = {
    'format__iso': 'c',
    'format__html_date': 'Y-m-d',
    'format__date': 'F j, Y',
    'format__date__start': 'F j, Y',
    'format__day__full__start': "D M j",
    'format__day__full': 'D M j, Y',
    'format__time__start': 'g:i a',
    'format__time': 'g:i a',
    'format__all_day': "\\A\\l\\l \\D\\a\\y",
    'format__all_day__start': '',
    'format__day__long': 'l, F j, Y',
    'format__day__long__start': 'l, F j, Y',
    'format__same_day_diff_time__start': 'D M j, Y g:i a',
    'format__same_day_diff_time': 'g:i a',
  } %}

{% set between_characters = {
  'default': '',
  'format__date': em_dash,
  'format__day_full': " to ",
  'format__time': em_dash,
  'format__day__long': em_dash,
  'format__same_day_diff_time': em_dash,
} %}

{# Set the default format to use if no format is provided. #}
{% set format_defaults = {
  "time": "format__time",
  "date": "format__date",
  "date_and_time": "format__day__full",
  "all_day": "format__all_day",
  "day__full": "format__day__full",
  "same_day_diff_time": "format__same_day_diff_time",
  } %}


{% set used_format = date_time__format_override|default(format_defaults[date_time__format]) %}
{% set is_same_day = date_time__start|date(formats['format__html_date']) == date_time__end|date(formats['format__html_date']) %}
{% set start_format = formats[used_format ~ "__start"] %}
{% set end_format = formats[used_format] %}
{% set between_character = between_characters[used_format]|default(between_characters['default']) %}

{# If the start and end dates are the same, use the same format for both. #}
{% set date_time = date_time__start|date(start_format) ~ between_character ~ date_time__end|date(start_format) %}
{% if same_start_and_end %}
  {% set date_time = date_time__start|date(end_format) %}
{% elseif is_same_day %}
  {% set date_time = date_time__start|date(start_format) ~ between_character ~ date_time__end|date(end_format) %}
{% endif %}
{% set date_time = date_time|replace({'am': 'a.m.', 'pm': 'p.m.'}) %}

{# Add attributes #}
{% set date_time__attribuites = {
  datetime: date_time__start|date(formats['format__iso']),
  class: bem('date-time'),
} %}

<time {{ add_attributes(date_time__attribuites) }}>{{ date_time }}</time>

{% endapply %}
