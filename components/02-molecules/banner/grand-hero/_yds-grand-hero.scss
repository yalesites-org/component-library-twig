@use '../../../00-tokens/tokens';
@use '../../../01-atoms/atoms';
@use '../../../00-tokens/functions/map';

$global-grand-hero-themes: map.deep-get(tokens.$tokens, 'global-themes');
$component-grand-hero-themes: map.deep-get(tokens.$tokens, 'component-themes');
$break-grand-hero-banner: tokens.$break-m;

.grand-hero-banner {
  @include tokens.spacing-page-section(
    $flush-top: true,
    $flush-bottom: true,
    $banner-spacing: true
  );

  position: relative;
  overflow: hidden;
  display: grid;
  align-items: end;
  width: 100%;
  max-width: tokens.$break-max-width;
  margin: 0 auto;
  background-color: var(--color-grand-hero-background);

  @media (min-width: $break-grand-hero-banner) {
    align-items: center;
  }

  &[data-grand-hero-size='reduced'] {
    min-height: 28rem;
  }

  &[data-grand-hero-size='full'] {
    min-height: calc(95vh - var(--site-header-height));
  }

  // Component themes defaults: iterate over each component theme to establish
  // default variables.
  @each $theme, $value in $component-grand-hero-themes {
    &[data-component-theme='#{$theme}'] {
      --color-text: var(--color-grand-hero-text);
      --color-backgound: var(--color-grand-hero-background);
      --color-heading: var(--color-grand-hero-heading);
      --color-action: var(--color-grand-hero-action);
      --color-action-secondary: var(--color-grand-hero-action-secondary);
      --color-slot-one: var(--component-themes-#{$theme}-slot-one);
      --color-slot-two: var(--component-themes-#{$theme}-slot-two);
      --color-slot-three: var(--component-themes-#{$theme}-slot-three);
      --color-slot-four: var(--component-themes-#{$theme}-slot-four);
      --color-slot-five: var(--component-themes-#{$theme}-slot-five);
      --color-slot-six: var(--component-themes-#{$theme}-slot-six);
      --color-slot-seven: var(--component-themes-#{$theme}-slot-seven);
      --color-slot-eight: var(--component-themes-#{$theme}-slot-eight);
    }
  }

  // Global themes: set color slots for each theme
  // This establishes `--color-slot-` variables name-spaced to the selector
  // in which it is used. We can map component-level variables to global-level
  // `--color-slot-` variables.
  @each $globalTheme, $value in $global-grand-hero-themes {
    [data-global-theme='#{$globalTheme}'] & {
      --color-slot-one: var(--global-themes-#{$globalTheme}-colors-slot-one);
      --color-slot-two: var(--global-themes-#{$globalTheme}-colors-slot-two);
      --color-slot-three: var(
        --global-themes-#{$globalTheme}-colors-slot-three
      );
      --color-slot-four: var(--global-themes-#{$globalTheme}-colors-slot-four);
      --color-slot-five: var(--global-themes-#{$globalTheme}-colors-slot-five);
      --color-slot-six: var(--global-themes-#{$globalTheme}-colors-slot-six);
      --color-slot-seven: var(
        --global-themes-#{$globalTheme}-colors-slot-seven
      );
      --color-slot-eight: var(
        --global-themes-#{$globalTheme}-colors-slot-eight
      );
    }
  }

  // Component theme overrides: set specific component themes overrides
  /// define component name spaced variables and map them to global theme slots.
  &[data-component-theme='one'] {
    --color-grand-hero-background: var(--color-slot-one);
    --color-grand-hero-text: var(--color-slot-eight);
    --color-grand-hero-heading: var(--color-slot-eight);
    --color-grand-hero-action: var(--color-slot-eight);
    --color-grand-hero-action-secondary: var(--color-slot-one);
    --color-link-base: var(--color-grand-hero-text);
    --color-link-hover: var(--color-grand-hero-text);
    --color-link-visited-base: var(--color-link-visited-light);
    --color-link-visited-hover: var(--color-link-visited-light-hover);
  }

  &[data-component-theme='two'] {
    --color-grand-hero-background: var(--color-slot-four);
    --color-grand-hero-text: var(--color-slot-seven);
    --color-grand-hero-heading: var(--color-slot-seven);
    --color-grand-hero-action: var(--color-slot-seven);
    --color-grand-hero-action-secondary: var(--color-slot-eight);
    --color-link-base: var(--color-grand-hero-text);
    --color-link-hover: var(--color-grand-hero-text);

    p > a {
      color: var(--color-slot-seven);
    }
  }

  &[data-component-theme='three'] {
    --color-grand-hero-background: var(--color-slot-five);
    --color-grand-hero-text: var(--color-slot-eight);
    --color-grand-hero-heading: var(--color-slot-eight);
    --color-grand-hero-action: var(--color-slot-eight);
    --color-grand-hero-action-secondary: var(--color-slot-one);
    --color-link-base: var(--color-grand-hero-text);
    --color-link-hover: var(--color-grand-hero-text);
    --color-link-visited-base: var(--color-link-visited-light);
    --color-link-visited-hover: var(--color-link-visited-light-hover);
  }
}

.grand-hero-banner__image {
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  position: absolute;

  img {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }
}

.grand-hero-banner__video {
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  position: absolute;

  video {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }
}

.grand-hero-banner__outer-wrap {
  width: 100%;

  [data-grand-hero-overlay-variation='contained'] & {
    align-items: flex-end;

    @media (min-width: $break-grand-hero-banner) {
      align-items: center;
    }
  }

  [data-grand-hero-overlay-variation='full'] & {
    display: flex;
    width: 100%;
    height: 100%;
    align-items: center;
  }
}

.grand-hero-banner__wrap {
  display: flex;
  width: 100%;
  margin: 0 auto;

  [data-grand-hero-overlay-variation='contained'] & {
    // prettier-ignore
    max-width: calc(var(--size-component-layout-width-max) + (var(--size-spacing-site-gutter) * 2) );
  }

  [data-grand-hero-overlay-variation='full'] & {
    height: 100%;
    align-items: center;
  }

  [data-grand-hero-overlay-variation='contained'][data-grand-hero-width='site']
    & {
    // prettier-ignore
    max-width: calc(var(--size-component-layout-width-site) + (var(--size-spacing-site-gutter) * 2));

    @media (min-width: $break-grand-hero-banner) {
      margin: 0 auto;
    }
  }
}

.grand-hero-banner__content {
  position: relative;
  padding: var(--size-spacing-6) var(--size-spacing-site-gutter);
  background: transparent;
  color: var(--color-text);

  [data-grand-hero-overlay-variation='contained'] & {
    margin-bottom: var(--size-spacing-6);
    width: 100%;

    @media (min-width: $break-grand-hero-banner) {
      width: auto;
      max-width: var(--size-component-layout-width-content);
    }
  }

  [data-grand-hero-overlay-variation='full'] & {
    width: 100%;
    height: 100%;
    display: flex;
    align-items: center;
  }

  &::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    height: 100%;
    width: 100%;
    background-color: var(--color-grand-hero-background);
    opacity: 0.85;
  }
}

.grand-hero-banner__content-inner {
  position: relative;
  display: grid;
  gap: var(--size-spacing-3);
  padding-left: 0;

  @media (min-width: $break-grand-hero-banner) {
    width: 100%;
    max-width: var(--size-component-layout-width-max);
    margin: 0 auto;
  }

  > * {
    max-width: var(--size-component-layout-width-content);
  }

  [data-grand-hero-width='site'] & {
    // prettier-ignore
    max-width: var(--size-component-layout-width-site);

    @media (min-width: $break-grand-hero-banner) {
      margin: 0 auto;
    }
  }
}

.grand-hero-banner__snippet {
  p:last-child {
    margin-bottom: 0;
  }
}

.grand-hero-banner__heading {
  @include tokens.h2-yale-new;
}

.grand-hero-banner__link {
  @include atoms.plain-link;

  width: fit-content;

  [data-component-theme] & {
    --color-link-hover: var(--color-grand-hero-text);
  }
}

.grand-hero-banner__button-group {
  display: flex;
  flex-flow: row wrap;
  gap: var(--size-spacing-7);
}
