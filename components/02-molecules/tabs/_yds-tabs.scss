@use '../../00-tokens/tokens';
@use '../../01-atoms/atoms';
@use '../../00-tokens/functions/map';

// get global themes
$global-tab-themes: map.deep-get(tokens.$tokens, 'global-themes');
$component-tab-themes: map.deep-get(tokens.$tokens, 'component-themes');

.tabs {
  @include tokens.spacing-page-section;
  @include tokens.animate(height);

  overflow: hidden;
  position: relative;
  border-bottom: var(--size-thickness-1) solid var(--color-gray-500);

  --color-tabs-accent: --color-gray-500;
  --size-tabs-control: 4rem;

  [data-component-alignment='left'] & {
    max-width: var(--size-component-layout-width-content);
  }

  // Global themes: set color slots for each theme
  // This establishes `--color-slot-` variables name-spaced to the selector
  // in which it is used. We can map component-level variables to global-level
  // `--color-slot-` variables.
  @each $globalTheme, $value in $global-tab-themes {
    [data-global-theme='#{$globalTheme}'] & {
      --color-slot-one: var(--global-themes-#{$globalTheme}-colors-slot-one);
      --color-slot-two: var(--global-themes-#{$globalTheme}-colors-slot-two);
      --color-slot-three: var(
        --global-themes-#{$globalTheme}-colors-slot-three
      );
      --color-slot-four: var(--global-themes-#{$globalTheme}-colors-slot-four);
      --color-slot-five: var(--global-themes-#{$globalTheme}-colors-slot-five);
    }
  }

  // Component themes defaults: iterate over each component theme to establish
  // default variables.
  @each $theme, $value in $component-tab-themes {
    &[data-component-theme='#{$theme}'] {
      // prettier-ignore
      --color-tabs-accent: var(--color-tabs-accent);
      --color-action: var(--color-tabs-action);
      --color-background: var(--color-tabs-background);
    }
  }

  // Component theme overrides: set specific component themes overrides
  /// define component name spaced variables and map them to global theme slots.
  &[data-component-theme='one'] {
    --color-tabs-accent: var(--color-slot-one);
    --color-tabs-action: var(--color-slot-one);
    --color-tabs-background: var(--color-basic-white);
    --color-heading: var(--color-gray-700);
  }

  &[data-component-theme='two'] {
    --color-tabs-accent: var(--color-slot-two);
    --color-tabs-action: var(--color-slot-two);
    --color-tabs-background: var(--color-basic-white);
    --color-heading: var(--color-gray-700);
  }

  &[data-component-theme='three'] {
    --color-tabs-accent: var(--color-slot-five);
    --color-tabs-action: var(--color-slot-five);
    --color-tabs-background: var(--color-basic-white);
    --color-heading: var(--color-gray-700);
  }
}

.tabs__tabs {
  position: relative;
  display: flex;
  justify-content: center;
  height: var(--size-tabs-control);

  &::after {
    content: '';
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
    width: 100%;
    border-bottom: var(--size-thickness-1) solid var(--color-gray-500);
  }
}

.tabs__control {
  @include tokens.animate(opacity);
  @include atoms.button-reset;

  position: absolute;
  top: var(--size-thickness-1);
  display: flex;
  align-items: center;
  justify-content: center;
  width: calc(var(--size-tabs-control) - var(--size-thickness-2));
  height: calc(var(--size-tabs-control) - var(--size-thickness-2));
  background-color: var(--color-background);
  opacity: 0;
  border: var(--size-thickness-1) solid var(--color-gray-700);

  &--left {
    left: 0;
    transform: rotate(90deg);
    z-index: 2;

    [data-overflow='left'] &,
    [data-overflow='both'] & {
      opacity: 1;
    }

    [data-overflow='right'] & {
      @include tokens.animate-hidden;
    }
  }

  &--right {
    right: 0;
    transform: rotate(-90deg);
    z-index: 2;

    [data-overflow='right'] &,
    [data-overflow='both'] & {
      opacity: 1;
    }

    [data-overflow='left'] & {
      @include tokens.animate-hidden;
    }
  }

  &:hover {
    color: var(--color-link-base);
  }

  svg {
    height: 2.5em;
    width: 2.5em;
  }
}

.tabs__nav {
  @include atoms.list-reset;

  display: flex;
  overflow: auto;
  scroll-behavior: smooth;
  -ms-overflow-style: none; /* IE and Edge */
  scrollbar-width: none; /* Firefox */

  &::-webkit-scrollbar {
    display: none;
  }
}

.tabs__item {
  flex-shrink: 0;
  border-top: var(--size-thickness-1) solid var(--color-gray-300);
  border-left: var(--size-thickness-1) solid var(--color-gray-300);
  overflow: hidden;

  &:last-child {
    border-right: var(--size-thickness-1) solid var(--color-gray-300);
  }
}

.tabs__link {
  display: block;
  position: relative;
  text-decoration: none;
  padding: var(--size-spacing-3) var(--size-spacing-7) var(--size-spacing-5);
  color: var(--color-gray-700);
  border-top: var(--size-thickness-6) solid transparent;
  background-color: var(--color-gray-100);
  height: 100%;

  &:hover {
    color: var(--color-link-base);
  }

  &:focus-visible {
    outline-offset: -2px;
  }

  // Active tab.
  &[aria-selected='true'] {
    color: var(--color-action);
    border-color: var(--color-action);
    background-color: var(--color-basic-white);

    &::before {
      content: '';
      position: absolute;
      width: 100%;
      left: 0;
      right: 0;
      bottom: 0;
      border-bottom: var(--size-spacing-3) solid var(--color-basic-white);
      z-index: 1;
    }
  }
}

.tabs__container {
  position: absolute;
  width: 100%;
  padding-block-start: var(--size-spacing-9);
  padding-block-end: var(--size-spacing-9);

  &:not(.is-active) {
    @include tokens.animate-hidden;

    opacity: 0;
    transition: opacity 800ms;
  }

  &.is-active {
    opacity: 1;
    transition: opacity 800ms;
  }
}
