@use '~@yalesites-org/tokens/build/scss/tokens' as sass-tokens;
@use '../../00-tokens/functions/map';
@use '../../00-tokens/tokens';
@use '../../01-atoms/atoms';

// get global themes
$global-inline-message-themes: map.deep-get(tokens.$tokens, 'global-themes');
$component-inline-message-themes: map.deep-get(
  tokens.$tokens,
  'component-themes'
);

.inline-message {
  --size-icon: 1.5rem;

  // Component themes defaults: iterate over each component theme to establish
  // default variables.
  @each $theme, $value in $component-inline-message-themes {
    &[data-component-theme='#{$theme}'] {
      // prettier-ignore
      --color-slot-one: var(--component-themes-#{$theme}-slot-one);
      --color-slot-two: var(--component-themes-#{$theme}-slot-two);
      --color-slot-three: var(--component-themes-#{$theme}-slot-three);
      --color-slot-four: var(--component-themes-#{$theme}-slot-four);
      --color-slot-five: var(--component-themes-#{$theme}-slot-five);
      --color-slot-six: var(--component-themes-#{$theme}-slot-six);
      --color-slot-seven: var(--component-themes-#{$theme}-slot-seven);
      --color-slot-eight: var(--component-themes-#{$theme}-slot-eight);
      --color-inline-message-background: var(--color-slot-four);
      --color-inline-message-text: var(--color-slot-six);

      background-color: var(--color-inline-message-background);
      color: var(--color-inline-message-text);
    }
  }

  // Global themes: set color slots for each theme
  // This establishes `--color-slot-` variables name-spaced to the selector
  // in which it is used. We can map component-level variables to global-level
  // `--color-slot-` variables.
  @each $globalTheme, $value in $global-inline-message-themes {
    [data-global-theme='#{$globalTheme}'] & {
      --color-slot-one: var(--global-themes-#{$globalTheme}-colors-slot-one);
      --color-slot-two: var(--global-themes-#{$globalTheme}-colors-slot-two);
      --color-slot-three: var(
        --global-themes-#{$globalTheme}-colors-slot-three
      );
      --color-slot-four: var(--global-themes-#{$globalTheme}-colors-slot-four);
      --color-slot-five: var(--global-themes-#{$globalTheme}-colors-slot-five);
      --color-slot-six: var(--global-themes-#{$globalTheme}-colors-slot-six);
      --color-slot-seven: var(
        --global-themes-#{$globalTheme}-colors-slot-seven
      );
      --color-slot-eight: var(
        --global-themes-#{$globalTheme}-colors-slot-eight
      );
    }
  }

  &[data-component-theme='two'] {
    --color-inline-message-background: var(--color-slot-one);
    --color-inline-message-text: var(--color-slot-eight);
  }

  &[data-component-theme='three'] {
    --color-inline-message-background: var(--color-slot-two);
    --color-inline-message-text: var(--color-slot-eight);
  }

  &[data-component-theme='four'] {
    --color-inline-message-background: var(--color-slot-three);
    --color-inline-message-text: var(--color-slot-seven);
  }

  &[data-component-theme='five'] {
    --color-inline-message-background: var(--color-slot-five);
    --color-inline-message-text: var(--color-slot-eight);
  }
}

.inline-message__inner {
  display: flex;
  align-items: flex-start;
  padding-block-start: var(--size-spacing-6);
  padding-block-end: var(--size-spacing-6);
}

.inline-message__icon {
  display: flex;
  margin-right: var(--size-spacing-3);
  margin-top: var(--size-spacing-2);
  flex: 0 0 var(--size-icon);

  @media (max-width: tokens.$break-mobile-max) {
    padding-top: var(--size-spacing-1);
  }

  @media (min-width: tokens.$break-mobile) {
    margin-right: var(--size-spacing-5);
  }

  svg {
    height: var(--size-icon);
    width: var(--size-icon);
  }
}

.inline-message__heading {
  @include tokens.h5-mallory-compact-medium;

  color: inherit;
}

.inline-message__content {
  display: flex;
  flex: 1 1 auto;
  flex-flow: column nowrap;
  gap: var(--size-spacing-2);
  align-items: flex-start;
}

.inline-message__text {
  @include tokens.body-s-condensed;

  max-width: var(--size-component-layout-width-content);
  color: var(--color-inline-message-text);

  > *:last-child {
    margin-bottom: 0;
  }

  // if there is 1 p element in the text element, remove the margin
  // do not remove the margin if there are multiple p elements
  > p:not(p + p) {
    margin: 0;
  }
}

.inline-message__link {
  @include atoms.link;
  @include tokens.body-s;

  --position: 0 1.3em;

  margin-bottom: var(--size-spacing-2);

  [data-component-theme='two'] & {
    --color-link-base: var(--color-slot-eight);
    --color-link-hover: var(--color-slot-eight);
    --color-link-visited-base: var(--color-link-visited-light);
    --color-link-visited-hover: var(--color-link-visited-light-hover);
  }

  [data-component-theme='four'] & {
    --color-link-base: var(--color-slot-seven);
    --color-link-hover: var(--color-slot-seven);
    --color-link-visited-base: var(--color-slot-seven);
    --color-link-visited-hover: var(--color-slot-seven);
  }

  [data-component-theme='five'] & {
    --color-link-base: var(--color-slot-eight);
    --color-link-hover: var(--color-slot-eight);
    --color-link-visited-base: var(--color-link-visited-light);
    --color-link-visited-hover: var(--color-link-visited-light-hover);
  }

  [data-component-theme='three'] & {
    --color-link-base: var(--color-slot-eight);
    --color-link-hover: var(--color-slot-eight);
    --color-link-visited-base: var(--color-link-visited-light);
    --color-link-visited-hover: var(--color-link-visited-light-hover);

    // For accessibility reason set lighter visited links color.
    [data-global-theme='four'] & {
      --color-link-visited-base: var(--color-gray-100);
      --color-link-visited-hover: var(--color-slot-eight);
    }
  }

  &:has(> i.fa-icon) {
    padding-right: var(--size-spacing-3);
  }
}
