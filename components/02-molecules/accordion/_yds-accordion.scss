@use '../../00-tokens/tokens';
@use '../../00-tokens/functions/map';
@use '../../01-atoms/atoms';

$global-accordion-themes: map.deep-get(tokens.$tokens, 'global-themes');
$accordion-component-themes: map.deep-get(tokens.$tokens, 'component-themes');

// The accordion group.
.accordion {
  @include tokens.spacing-page-section;

  --color-text-shadow: var(--color-basic-white);

  // Component themes defaults: iterate over each component theme to establish
  // default variables.
  @each $theme, $value in $accordion-component-themes {
    &[data-component-theme='#{$theme}'] {
      // prettier-ignore
      --color-slot-one: var(--component-themes-#{$theme}-slot-one);
      --color-slot-two: var(--component-themes-#{$theme}-slot-two);
      --color-slot-three: var(--component-themes-#{$theme}-slot-three);
      --color-slot-four: var(--component-themes-#{$theme}-slot-four);
      --color-slot-five: var(--component-themes-#{$theme}-slot-five);
      --color-slot-six: var(--component-themes-#{$theme}-slot-six);
      --color-slot-seven: var(--component-themes-#{$theme}-slot-seven);
      --color-slot-eight: var(--component-themes-#{$theme}-slot-eight);
      --color-accordion-accent: var(--color-slot-one);
      --color-heading: var(--color-gray-800);
    }
  }

  // Global themes: set color slots for each theme
  // This establishes `--color-slot-` variables name-spaced to the selector
  // in which it is used. We can map component-level variables to global-level
  // `--color-slot-` variables.
  @each $globalTheme, $value in $global-accordion-themes {
    [data-global-theme='#{$globalTheme}'] & {
      --color-slot-one: var(--global-themes-#{$globalTheme}-colors-slot-one);
      --color-slot-two: var(--global-themes-#{$globalTheme}-colors-slot-two);
      --color-slot-three: var(
        --global-themes-#{$globalTheme}-colors-slot-three
      );
      --color-slot-four: var(--global-themes-#{$globalTheme}-colors-slot-four);
      --color-slot-five: var(--global-themes-#{$globalTheme}-colors-slot-five);
      --color-slot-six: var(--global-themes-#{$globalTheme}-colors-slot-six);
      --color-slot-seven: var(
        --global-themes-#{$globalTheme}-colors-slot-seven
      );
      --color-slot-eight: var(
        --global-themes-#{$globalTheme}-colors-slot-eight
      );
      --color-accordion-accent: var(--color-slot-two);
    }
  }

  &[data-component-theme='one'] {
    --color-accordion-accent: var(--color-slot-one);
  }

  &[data-component-theme='two'] {
    --color-accordion-accent: var(--color-slot-two);
  }

  &[data-component-theme='three'] {
    --color-accordion-accent: var(--color-slot-three);
  }

  &[data-component-theme='four'] {
    --color-accordion-accent: var(--color-slot-four);
  }

  &[data-component-theme='five'] {
    --color-accordion-accent: var(--color-slot-five);
  }

  // remove margin from the top and bottom of the accordion in a fifty-fifty layout
  [data-component-layout='fifty-fifty'] & {
    margin-block-start: 0;
    margin-block-end: 0;
  }
}

.accordion__heading {
  @include tokens.h2-yale-new;

  margin-bottom: var(--size-spacing-5);

  [data-component-theme]:not(
      [data-component-theme='default'],
      [data-component-theme='two']
    )
    & {
    color: var(--color-basic-white);
  }
}

.accordion__controls {
  @include atoms.list-reset;

  display: flex;
  margin-bottom: var(--size-spacing-5);

  > *:not(:last-child) {
    padding-right: var(--size-spacing-5);
    margin-right: var(--size-spacing-5);
    border-right: var(--border-thickness-1) solid;
  }

  [data-component-alignment='left'] & {
    max-width: var(--size-component-layout-width-content);
  }
}

.accordion__icon {
  height: 1em;
  width: 1em;
}

.accordion__toggle-all {
  @include tokens.body-s;
  @include atoms.button-reset;

  display: flex;
  gap: var(--size-spacing-3);
  align-items: center;
  cursor: pointer;

  &:hover {
    color: var(--color-link-base);
  }

  &[aria-expanded='true'] .accordion__icon {
    transform: rotate(180deg);
  }
}

// Individual accordion items.
.accordion-item {
  border-bottom: var(--border-thickness-1) solid;
  padding-top: var(--size-spacing-5);

  [data-component-alignment='left'] & {
    max-width: var(--size-component-layout-width-content);
  }

  [data-component-theme]:not([data-component-theme='default']) & {
    --color-link-base: var(--color-gray-700);
    --color-heading: var(--color-gray-700);

    border-bottom: none;
    background-color: var(--color-gray-100);
    padding: var(--size-spacing-3) var(--size-spacing-4);
    border-left: var(--border-thickness-6) solid var(--color-accordion-accent);
    margin-bottom: var(--size-spacing-5);
    color: var(--color-gray-700);

    .text-field a {
      --color-text-shadow: var(--color-gray-100);
      --color-link-hover: var(--color-gray-700);
      --color-link-base: var(--color-gray-700);
    }
  }

  [data-global-theme='one'] [data-component-theme='two'] .accordion &,
  [data-global-theme='five'] [data-component-theme='two'] .accordion & {
    background-color: var(--color-basic-white);
  }
}

.accordion-item__heading {
  @include tokens.body-l;

  [data-component-theme='default'] & {
    margin-bottom: var(--size-spacing-5);
  }
}

.accordion-item__toggle {
  @include atoms.button-reset;

  display: flex;
  gap: var(--size-spacing-5);
  justify-content: space-between;
  align-items: center;
  width: 100%;
  padding: var(--size-spacing-3) var(--size-spacing-4) var(--size-spacing-3) 0;
  text-align: left;
  cursor: pointer;

  &:hover {
    color: var(--color-link-base);
  }
}

.accordion-item__icon {
  @include tokens.animate;

  height: 1em;
  width: 1em;
  flex-shrink: 0;

  [aria-expanded='true'] > & {
    transform: rotate(180deg);
  }
}

.accordion-item__content {
  @include tokens.animate(all, var(--animation-speed-slow));

  max-height: var(--accordion-item-height);
  overflow: hidden;

  @media (max-width: tokens.$break-mobile-max) {
    padding-inline-start: var(--size-spacing-6);
    padding-inline-end: var(--size-spacing-6);
  }

  @media (min-width: tokens.$break-mobile) {
    padding-inline-start: var(--size-spacing-8);
    padding-inline-end: var(--size-spacing-8);
  }

  [data-accordion-expanded='true'] & {
    margin-bottom: var(--size-spacing-6);
  }

  [data-accordion-expanded='false'] & {
    @include tokens.animate-hidden(var(--animation-speed-slow));

    max-height: 0;
  }

  // for accordions using themes, the content needs top margin
  [data-component-theme]:not([data-component-theme='default']) & {
    > *:first-child {
      margin-top: var(--size-spacing-5);
    }
  }
}
