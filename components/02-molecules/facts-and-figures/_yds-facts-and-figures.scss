@use '../../00-tokens/tokens';
@use '../../00-tokens/functions/map';
@use '../../01-atoms/controls/text-link/_yds-text-link' as text-link;

$global-facts-and-figures-themes: map.deep-get(tokens.$tokens, 'global-themes');
$facts-and-figures-component-themes: map.deep-get(
  tokens.$tokens,
  'component-themes'
);

.facts-and-figures {
  display: flex;
  flex-flow: column nowrap;
  align-items: center;
  width: 100%;

  --eyebrow-width: var(--size-spacing-11);

  // Component themes defaults: iterate over each component theme to establish
  // default variables.
  @each $theme, $value in $facts-and-figures-component-themes {
    &[data-component-theme='#{$theme}'] {
      // prettier-ignore
      --color-slot-one: var(--component-themes-#{$theme}-slot-one);
      --color-slot-two: var(--component-themes-#{$theme}-slot-two);
      --color-slot-three: var(--component-themes-#{$theme}-slot-three);
      --color-slot-four: var(--component-themes-#{$theme}-slot-four);
      --color-slot-five: var(--component-themes-#{$theme}-slot-five);
      --color-slot-six: var(--component-themes-#{$theme}-slot-six);
      --color-slot-seven: var(--component-themes-#{$theme}-slot-seven);
      --color-slot-eight: var(--component-themes-#{$theme}-slot-eight);
      --color-facts-and-figures-theme: var(--color-slot-one);
      --color-facts-and-figures-content: var(--color-slot-eight);

      background-color: var(--color-facts-and-figures-theme);
      color: var(--color-facts-and-figures-content);
    }
  }

  // Global themes: set color slots for each theme
  // This establishes `--color-slot-` variables name-spaced to the selector
  // in which it is used. We can map component-level variables to global-level
  // `--color-slot-` variables.
  @each $globalTheme, $value in $global-facts-and-figures-themes {
    [data-global-theme='#{$globalTheme}'] & {
      --color-slot-one: var(--global-themes-#{$globalTheme}-colors-slot-one);
      --color-slot-two: var(--global-themes-#{$globalTheme}-colors-slot-two);
      --color-slot-three: var(
        --global-themes-#{$globalTheme}-colors-slot-three
      );
      --color-slot-four: var(--global-themes-#{$globalTheme}-colors-slot-four);
      --color-slot-five: var(--global-themes-#{$globalTheme}-colors-slot-five);
      --color-slot-six: var(--global-themes-#{$globalTheme}-colors-slot-six);
      --color-slot-seven: var(
        --global-themes-#{$globalTheme}-colors-slot-seven
      );
      --color-slot-eight: var(
        --global-themes-#{$globalTheme}-colors-slot-eight
      );
    }
  }

  // Component theme overrides: set specific component themes overrides
  /// define component name spaced variables and map them to global theme slots.
  &[data-component-theme='one'] {
    --color-facts-and-figures-theme: var(--color-slot-one);
    --color-facts-and-figures-content: var(--color-slot-eight);
  }

  &[data-component-theme='two'] {
    --color-facts-and-figures-theme: var(--color-slot-two);
    --color-facts-and-figures-content: var(--color-slot-eight);
  }

  &[data-component-theme='three'] {
    --color-facts-and-figures-theme: var(--color-slot-three);
    --color-facts-and-figures-content: var(--color-slot-seven);
  }

  &__inner {
    display: flex;
    flex-flow: column nowrap;
    align-items: flex-start;
    justify-content: flex-start;
    padding: var(--size-spacing-8) 0;
    height: 100%;

    [data-component-alignment='left'] & {
      text-align: left;
    }

    [data-component-alignment='center'] & {
      text-align: center;
    }

    // if we're using a single facts-and-figures, add padding to the facts-and-figures item inner
    [data-facts-and-figures-collection-type='single'] & {
      padding: var(--size-spacing-8);
    }
  }
}

.facts-and-figures__stat {
  @include tokens.h3-yale-new;

  width: 100%;
  position: relative;

  // change font-variant-numeric to normal from the default of oldstyle-nums in the h3-yale-new mixin
  [data-facts-and-figures-font-style='normal'] & {
    font-variant-numeric: normal;
  }

  // add eyebrow above facts-and-figures
  [data-facts-and-figures-style='basic'] & {
    &::before {
      content: '';
      display: block;
      position: relative;
      width: var(--eyebrow-width);
      border-bottom: var(--size-spacing-1) solid
        var(--color-facts-and-figures-content);
      margin-bottom: var(--size-spacing-4);
    }
  }

  // set eyebrow width var to 100% if facts-and-figures is centered
  [data-component-alignment='center'] & {
    --eyebrow-width: 100%;
  }
}

.facts-and-figures__icon {
  align-self: flex-start;
  margin-bottom: var(--size-spacing-2);

  [data-component-alignment='center'] & {
    align-self: center;
  }
}

// svg
.facts-and-figures__facts-and-figures-icon {
  max-width: var(--size-spacing-9); // max-width 48px
  max-height: var(--size-spacing-9); // max-height 48px
  fill: var(--color-facts-and-figures-content);
}

.facts-and-figures__content {
  @include tokens.body-default;

  width: 100%;
}
