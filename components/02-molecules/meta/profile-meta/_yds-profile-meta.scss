@use '~@yalesites-org/tokens/build/scss/tokens' as sass-tokens;
@use '../../../00-tokens/tokens';
@use '../../../00-tokens/functions/map';
@use '../../../01-atoms/atoms';

$component-profile-themes: map.deep-get(tokens.$tokens, 'component-themes');
$global-profile-themes: map.deep-get(tokens.$tokens, 'global-themes');
$break-profile-banner: tokens.$break-l;
$break-profile-banner-max: $break-profile-banner - 0.05;

.profile-meta {
  @include tokens.spacing-page-section(
    $flush-top: true,
    $flush-bottom: true,
    $banner-spacing: true
  );

  color: var(--color-text);
  background-color: var(--color-profile-background);

  // Component themes defaults: iterate over each component theme to establish
  // default variables.
  @each $theme, $value in $component-profile-themes {
    &[data-component-theme='#{$theme}'] {
      // prettier-ignore
      --color-profile-background: var(--component-themes-#{$theme}-background);
      --color-text-shadow: var(--component-themes-#{$theme}-background);
      --color-slot-one: var(--component-themes-#{$theme}-slot-one);
      --color-slot-two: var(--component-themes-#{$theme}-slot-two);
      --color-slot-three: var(--component-themes-#{$theme}-slot-three);
      --color-slot-four: var(--component-themes-#{$theme}-slot-four);
      --color-slot-five: var(--component-themes-#{$theme}-slot-five);
    }
  }

  // Global themes: set color slots for each theme
  // This establishes `--color-slot-` variables name-spaced to the selector
  // in which it is used. We can map component-level variables to global-level
  // `--color-slot-` variables.
  @each $globalTheme, $value in $global-profile-themes {
    [data-global-theme='#{$globalTheme}'] & {
      --color-slot-one: var(--global-themes-#{$globalTheme}-colors-slot-one);
      --color-slot-two: var(--global-themes-#{$globalTheme}-colors-slot-two);
      --color-slot-three: var(
        --global-themes-#{$globalTheme}-colors-slot-three
      );
      --color-slot-four: var(--global-themes-#{$globalTheme}-colors-slot-four);
      --color-slot-five: var(--global-themes-#{$globalTheme}-colors-slot-five);

      @if $globalTheme == 'four' {
        // Switch colors slot in order to have the selected background colors per component theme.
        --color-slot-two: var(--global-themes-four-colors-slot-five);
        --color-slot-five: var(--global-themes-four-colors-slot-two);

        // Set color slot for the text on light background.
        --color-slot-seven: var(--global-themes-four-colors-slot-six);
      }
    }
  }

  // Component theme overrides: set specific component themes overrides
  /// define component name spaced variables and map them to global theme slots.
  &[data-component-theme='one'] {
    --color-profile-background: var(--color-slot-one);
    --color-text-shadow: var(--color-slot-one);
    --color-text: var(--color-basic-white);
    --color-heading: var(--color-basic-white);
  }

  &[data-component-theme='two'] {
    --color-profile-background: var(--color-slot-four);
    --color-text-shadow: var(--color-slot-one);
    --color-text: var(--color-gray-800);
    --color-heading: var(--color-gray-800);

    [data-global-theme='four'] & {
      --color-text: var(--color-slot-seven);
      --color-heading: var(--color-slot-seven);
    }
  }

  &[data-component-theme='three'] {
    --color-profile-background: var(--color-slot-five);
    --color-text-shadow: var(--color-slot-one);
    --color-text: var(--color-basic-white);
    --color-heading: var(--color-basic-white);
  }

  &[data-component-theme='four'] {
    --color-profile-background: var(--color-slot-two);
    --color-text-shadow: var(--color-slot-one);
    --color-text: var(--color-basic-white);
    --color-heading: var(--color-basic-white);

    [data-global-theme='four'] & {
      --color-profile-background: var(--component-themes-five-background);
      --color-text: var(--component-themes-five-text);
      --color-text-shadow: var(--component-themes-five-text);
      --color-heading: var(--component-themes-five-heading);
    }
  }

  &[data-component-theme='five'] {
    --color-profile-background: var(--color-slot-three);
    --color-text-shadow: var(--color-slot-one);
    --color-text: var(--color-gray-800);
    --color-heading: var(--color-gray-800);
  }

  @media (max-width: tokens.$break-mobile-max) {
    @include tokens.body-s;

    display: flex;
    flex-direction: column;
  }
}

.profile-meta__inner {
  display: flex;
  flex-direction: column-reverse;
  width: 100%;
  max-width: var(--size-component-layout-width-site);

  @media (min-width: $break-profile-banner) {
    flex-direction: row-reverse;
    gap: var(--size-spacing-5);

    [data-component-image-alignment='left'] & {
      flex-direction: row;
      gap: var(--size-spacing-7);
    }
  }
}

.profile-meta__image {
  width: 100%;
  flex: 0 auto;

  @media (min-width: $break-profile-banner) {
    [data-component-image-style='outdent'] & {
      margin-top: var(--size-spacing-7);
      margin-bottom: calc(var(--size-spacing-7) * -1);
    }
  }

  [data-component-image-orientation='landscape'] & {
    aspect-ratio: 3/2;

    @media (max-width: $break-profile-banner-max) {
      margin-bottom: var(--size-spacing-5);
    }

    @media (min-width: $break-profile-banner) {
      max-width: 661px;
    }

    // Safari 14 fix for aspect-ratio
    @supports not (aspect-ratio: 3 / 2) {
      &::before {
        float: left;
        padding-top: 66.66%;
        content: '';
      }

      &::after {
        display: block;
        content: '';
        clear: both;
      }
    }
  }

  [data-component-image-orientation='portrait'] & {
    aspect-ratio: 2/3;

    // Safari 14 fix for aspect-ratio
    @supports not (aspect-ratio: 2 / 3) {
      &::before {
        float: left;
        padding-top: 150%;
        content: '';
      }

      &::after {
        display: block;
        content: '';
        clear: both;
      }
    }

    @media (min-width: $break-profile-banner) {
      max-width: 300px;
    }
  }
}

.profile-meta__content {
  display: flex;
  flex-direction: column;
  flex: 1 auto;
  padding-block: var(--size-spacing-8) var(--size-spacing-6);

  [data-component-image-orientation='landscape'] & {
    @media (min-width: $break-profile-banner) {
      max-width: calc(100% - 661px);
    }
  }

  [data-component-image-orientation='portrait'] & {
    @media (min-width: $break-profile-banner) {
      max-width: calc(100% - 300px);
    }
  }
}

.profile-title__page-title {
  margin-bottom: var(--size-spacing-8);
}

.profile-meta__title-line {
  @include tokens.h3-yale-new;

  margin-bottom: var(--size-spacing-6);
}

.profile-meta__subtitle-line {
  @include tokens.h4-yale-new;

  margin-bottom: var(--size-spacing-6);
}

.profile-meta__department-line {
  margin-top: auto;
}
