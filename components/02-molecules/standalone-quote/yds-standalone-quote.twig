{#
 # Available Props:
 # - standalone_quote__style: bar-left, bar-right, or quote-left
 # - animate__item: defaults to `enabled`, will only animate if site_animate_components (lever / config) is not `default`
 #
 # Available Variables:
 # - standalone_quote__quote (required)
 # - standalone_quote__attribution
 #}

{% set standalone_quote__base_class = 'standalone-quote' %}
{% set standalone_quote__style = standalone_quote__style|default('bar') %}

{# If standalone_quote__attributes is not defined, set it to an empty object by default #}
{% set standalone_quote__attributes = standalone_quote__attributes|default({}) %}

{# If standalone_quote__quote_image is 'with-image' set data-standalone-quote-style = 'image' #}
{% if standalone_quote__quote_image == 'with-image' %}
	{% set standalone_quote__style = 'image' %}
{% endif %}

{% set standalone_quote__attributes = standalone_quote__attributes|merge({
	'data-animate-item': animate__item|default('enabled'),
}) %}

{% set standalone_quote__attributes = standalone_quote__attributes|merge({
  'data-component-width': standalone_quote__width|default('content'),
  'data-standalone-quote-style': standalone_quote__style,
  'data-component-theme': standalone_quote__accent_theme|default('one'),
  'data-component-alignment': standalone_quote__alignment|default('center'),
	'data-standalone-quote-quote-alignment': standalone_quote__quote_alignment|default('left'),
  class: bem(standalone_quote__base_class, standalone_quote__modifiers),
}) %}

<div {{ add_attributes(standalone_quote__attributes) }}> {% block prefix_suffix %}{% endblock %}
	<div {{ bem('inner', [], standalone_quote__base_class) }}>
		{% if standalone_quote__quote_image == 'with-image' %}
			<div {{ bem('image', [], standalone_quote__base_class) }}>
				{% block standalone_quote__image %}
					{% include "@atoms/images/image/_responsive-image.twig" %}
				{% endblock %}
			</div>
		{% endif %}
		<figure {{ bem('figure', [], standalone_quote__base_class) }}>
			<blockquote {{ bem('quote', [], standalone_quote__base_class) }}>
				{{ standalone_quote__quote }}
			</blockquote>
			{% if standalone_quote__attribution %}
				<figcaption {{ bem('attribution', [], standalone_quote__base_class) }}>â€”{{ standalone_quote__attribution }}</figcaption>
			{% endif %}
		</figure>
	</div>
</div>
