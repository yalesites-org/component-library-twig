@use '~@yalesites-org/tokens/build/scss/tokens' as sass-tokens;
@use '../../00-tokens/tokens';
@use '../../00-tokens/functions/map';
@use '../../01-atoms/atoms';

$component-callout-themes: map.deep-get(tokens.$tokens, 'component-themes');
$global-callout-themes: map.deep-get(tokens.$tokens, 'global-themes');

.callouts {
  @include tokens.spacing-page-section(
    $flush-bottom: true,
    $banner-spacing: true
  );

  color: var(--color-text);
  background-color: var(--color-callouts-background);

  // Component themes defaults: iterate over each component theme to establish
  // default variables.
  @each $theme, $value in $component-callout-themes {
    &[data-component-theme='#{$theme}'] {
      // prettier-ignore
      --color-callouts-background: var(--component-themes-#{$theme}-background);
      --color-text-shadow: var(--component-themes-#{$theme}-background);
      --color-slot-one: var(--component-themes-#{$theme}-slot-one);
      --color-slot-two: var(--component-themes-#{$theme}-slot-two);
      --color-slot-three: var(--component-themes-#{$theme}-slot-three);
      --color-slot-four: var(--component-themes-#{$theme}-slot-four);
      --color-slot-five: var(--component-themes-#{$theme}-slot-five);
      --color-slot-six: var(--component-themes-#{$theme}-slot-six);
      --color-slot-seven: var(--component-themes-#{$theme}-slot-seven);
      --color-slot-eight: var(--component-themes-#{$theme}-slot-eight);
    }
  }

  // Global themes: set color slots for each theme
  // This establishes `--color-slot-` variables name-spaced to the selector
  // in which it is used. We can map component-level variables to global-level
  // `--color-slot-` variables.
  @each $globalTheme, $value in $global-callout-themes {
    [data-global-theme='#{$globalTheme}'] & {
      --color-slot-one: var(--global-themes-#{$globalTheme}-colors-slot-one);
      --color-slot-two: var(--global-themes-#{$globalTheme}-colors-slot-two);
      --color-slot-three: var(
        --global-themes-#{$globalTheme}-colors-slot-three
      );
      --color-slot-four: var(--global-themes-#{$globalTheme}-colors-slot-four);
      --color-slot-five: var(--global-themes-#{$globalTheme}-colors-slot-five);
      --color-slot-six: var(--global-themes-#{$globalTheme}-colors-slot-six);
      --color-slot-seven: var(
        --global-themes-#{$globalTheme}-colors-slot-seven
      );
      --color-slot-eight: var(
        --global-themes-#{$globalTheme}-colors-slot-eight
      );
    }
  }

  // Component theme overrides: set specific component themes overrides
  /// define component name spaced variables and map them to global theme slots.
  &[data-component-theme='one'] {
    --color-callouts-background: var(--color-slot-one);
    --color-text-shadow: var(--color-slot-one);
    --color-action: var(--color-basic-white);
    --color-action-secondary: var(--color-slot-one);
    --color-text: var(--color-basic-white);
    --color-heading: var(--color-basic-white);
    --color-link-base: var(--color-slot-eight);
  }

  &[data-component-theme='two'] {
    --color-callouts-background: var(--color-slot-four);
    --color-text-shadow: var(--color-slot-one);
    --color-action: var(--color-gray-800);
    --color-action-secondary: var(--color-basic-white);
    --color-text: var(--color-gray-800);
    --color-heading: var(--color-gray-800);
    --color-link-base: var(--color-slot-seven);
  }

  &[data-component-theme='three'] {
    --color-callouts-background: var(--color-slot-five);
    --color-text-shadow: var(--color-slot-one);
    --color-action: var(--color-basic-white);
    --color-action-secondary: var(--color-slot-one);
    --color-text: var(--color-basic-white);
    --color-heading: var(--color-basic-white);
    --color-link-base: var(--color-slot-eight);
  }
}

.callouts__inner {
  @media (min-width: tokens.$break-mobile) {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;

    > *:nth-child(2n) {
      padding-left: var(--size-spacing-9);
    }

    > *:nth-child(2n + 1):not(:last-child) {
      padding-right: var(--size-spacing-9);
    }
  }
}

.callout {
  position: relative;
  padding-top: var(--size-spacing-8);
  padding-bottom: var(--size-spacing-9);
  padding-inline-start: var(--size-spacing-7);
  padding-inline-end: var(--size-spacing-7);
  flex: 1 1 50%;
  text-align: center;

  &:nth-child(2n) {
    &::before {
      position: absolute;
      content: '';
      background-color: var(--color-text);

      @media (max-width: tokens.$break-mobile-max) {
        top: 0;
        left: var(--size-spacing-8);
        right: var(--size-spacing-8);
        height: var(--border-thickness-1);
      }

      @media (min-width: tokens.$break-mobile) {
        left: 0;
        top: var(--size-spacing-8);
        bottom: var(--size-spacing-8);
        width: var(--border-thickness-1);
      }
    }
  }
}

.callout__inner {
  display: flex;
  flex-direction: column;
  align-items: center;
  height: 100%;
  max-width: 40rem;
  width: auto;
}

.callout__heading {
  @include tokens.h3-yale-new;

  margin-bottom: var(--size-spacing-4);
}

.callout__text {
  @include tokens.body-default-condensed;

  a {
    @include atoms.link;
  }

  p:last-child {
    margin-bottom: 0;
  }
}

.callout__link {
  @include atoms.link;

  margin-top: var(--size-spacing-4);
}

.callout__cta {
  @include atoms.cta;

  margin-top: var(--size-spacing-6);
}
