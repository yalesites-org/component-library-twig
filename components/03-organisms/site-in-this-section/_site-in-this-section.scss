@use '../../00-tokens/tokens';
@use '../../00-tokens/functions/map';
@use '../../01-atoms/atoms';

$global-section-nav-themes: map.deep-get(tokens.$tokens, 'global-themes');
$section-nav-component-themes: map.deep-get(tokens.$tokens, 'component-themes');

:root {
  --site-in-this-section-animation-speed: var(--animation-speed-default);
}

.in-this-section {
  --section-toggle-height: 4rem;
  --size-in-this-section-control: 4rem;

  position: relative;
  background-color: var(--color-basic-white);

  @media (max-width: tokens.$break-mobile-max) {
    margin-inline-start: calc(var(--size-spacing-site-gutter) * -1);
    margin-inline-end: calc(var(--size-spacing-site-gutter) * -1);
  }

  // Component themes defaults: iterate over each component theme to establish
  // default variables.
  @each $theme, $value in $section-nav-component-themes {
    &[data-component-theme='#{$theme}'] {
      // prettier-ignore
      --color-slot-one: var(--component-themes-#{$theme}-slot-one);
      --color-slot-two: var(--component-themes-#{$theme}-slot-two);
      --color-slot-three: var(--component-themes-#{$theme}-slot-three);
      --color-slot-four: var(--component-themes-#{$theme}-slot-four);
      --color-slot-five: var(--component-themes-#{$theme}-slot-five);
      --color-slot-six: var(--component-themes-#{$theme}-slot-six);
      --color-slot-seven: var(--component-themes-#{$theme}-slot-seven);
      --color-slot-eight: var(--component-themes-#{$theme}-slot-eight);

      background-color: var(--color-background);

      .link,
      a {
        --color-text-shadow: var(--color-background);
        --color-link-hover: var(--color-link-hover);
      }

      a:not([data-link-style]) {
        @include atoms.link;

        color: var(--color-link-base);

        &:hover {
          color: var(--color-link-hover);
        }
      }
    }
  }

  // Global themes: set color slots for each theme
  // This establishes `--color-slot-` variables name-spaced to the selector
  // in which it is used. We can map component-level variables to global-level
  // `--color-slot-` variables.
  @each $globalTheme, $value in $global-section-nav-themes {
    [data-global-theme='#{$globalTheme}'] & {
      --color-slot-one: var(--global-themes-#{$globalTheme}-colors-slot-one);
      --color-slot-two: var(--global-themes-#{$globalTheme}-colors-slot-two);
      --color-slot-three: var(
        --global-themes-#{$globalTheme}-colors-slot-three
      );
      --color-slot-four: var(--global-themes-#{$globalTheme}-colors-slot-four);
      --color-slot-five: var(--global-themes-#{$globalTheme}-colors-slot-five);
      --color-slot-six: var(--global-themes-#{$globalTheme}-colors-slot-six);
      --color-slot-seven: var(
        --global-themes-#{$globalTheme}-colors-slot-seven
      );
      --color-slot-eight: var(
        --global-themes-#{$globalTheme}-colors-slot-eight
      );
      --color-heading: var(--color-slot-six);
      --color-background: var(--color-slot-eight);
      --color-navigation-border: var(--color-slot-three);
    }
  }

  // Increases z-index only when expanded
  // to prevent overlap with other components.
  &:has(.secondary-nav__toggle[aria-expanded='true']) {
    z-index: 500;
  }

  // Component theme overrides: set specific component themes overrides
  /// define component name spaced variables and map them to global theme slots.
  &[data-component-theme='one'] {
    --color-link-visited-base: var(--color-link-visited-light);
    --color-link-visited-hover: var(--color-link-visited-light-hover);
    --color-link-base: var(--color-slot-one);
    --color-link-hover: var(--color-slot-eight);
    --color-navigation-border: var(--color-slot-one);
  }

  &[data-component-theme='two'] {
    --color-link-base: var(--color-slot-one);
    --color-link-hover: var(--color-slot-seven);
    --color-navigation-border: var(--color-slot-two);
  }

  &[data-component-theme='three'] {
    --color-link-visited-base: var(--color-link-visited-light);
    --color-link-visited-hover: var(--color-link-visited-light-hover);
    --color-link-base: var(--color-slot-one);
    --color-link-hover: var(--color-slot-eight);
    --color-navigation-border: var(--color-slot-three);
  }

  &[data-component-theme='four'] {
    --color-link-visited-base: var(--color-link-visited-light);
    --color-link-visited-hover: var(--color-link-visited-light-hover);
    --color-navigation-border: var(--color-slot-four);
  }

  &[data-component-theme='five'] {
    --color-section-nav-theme: var(--color-slot-three);
    --color-section-nav-content: var(--color-slot-seven);
    --color-navigation-border: var(--color-slot-five);
  }

  .secondary-menu-toggle {
    display: none;

    @media (max-width: tokens.$break-mobile-max) {
      display: flex;
      position: relative;
      background-color: var(--color-basic-white);
      z-index: 2;

      &[aria-expanded='true'] {
        background-color: var(--color-gray-100);
      }
    }
  }

  @media (min-width: tokens.$break-mobile) {
    display: flex;
    flex-direction: column;
    align-items: flex-start;
  }
}

.in-this-section__inner {
  // the secondary menu submenu items are positioned absolutely based on the relative position of this container.
  // No other wrapping element has position: relative set so that the submenu items are positioned relative to the entire menu.
  position: relative;
  display: flex;

  @media (max-width: tokens.$break-mobile-max) {
    // when used in in-this-section, add a top border
    [aria-expanded='false'] & {
      border-top: var(--border-thickness-2) solid var(--color-navigation-border);
      margin-top: var(--size-spacing-3);
    }

    flex-direction: column;
  }

  @media (min-width: tokens.$break-mobile) {
    border-bottom: var(--border-thickness-1) solid
      var(--color-navigation-border);
  }
}

.in-this-section__control {
  @include tokens.animate(opacity);
  @include atoms.button-reset;

  position: absolute;
  top: 0;
  display: flex;
  align-items: center;
  justify-content: center;
  height: var(--size-click-target-minimum);
  width: var(--size-click-target-minimum);
  background-color: var(--color-background);
  opacity: 0;

  // Don't show controls on small screens when the items are hidden behind the
  // "expand" button.
  @media (max-width: tokens.$break-mobile-max) {
    [data-in-this-section-overflow='hidden'] & {
      display: none;
    }
  }

  &--left {
    left: 0;
    transform: rotate(90deg);
    z-index: 0;

    [data-scroll-indicator='left'] &,
    [data-scroll-indicator='both'] & {
      opacity: 1;
    }

    [data-scroll-indicator='none'] &,
    [data-scroll-indicator='right'] & {
      @include tokens.animate-hidden;

      pointer-events: none;
      user-select: none;
    }
  }

  &--right {
    right: 0;
    transform: rotate(-90deg);
    z-index: 0;

    [data-scroll-indicator='right'] &,
    [data-scroll-indicator='both'] & {
      opacity: 1;
    }

    [data-scroll-indicator='none'] &,
    [data-scroll-indicator='left'] & {
      @include tokens.animate-hidden;

      pointer-events: none;
      user-select: none;
    }
  }

  &:hover {
    color: var(--color-link-base);
  }

  svg {
    height: 1.5em;
    width: 1.5em;
  }
}
