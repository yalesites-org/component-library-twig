@use '../../../00-tokens/tokens';
@use '../../../00-tokens/functions/map';
@use '../../../01-atoms/atoms';

$global-secondary-nav-themes: map.deep-get(tokens.$tokens, 'global-themes');
$secondary-nav-component-themes: map.deep-get(
  tokens.$tokens,
  'component-themes'
);
$secondary-menu-sub-max-width: 19rem;

@mixin secondary-nav-item-level-0 {
  font: var(--font-style-nav-secondary-0);
  color: var(--color-heading);
  text-align: left;
  padding: 0 var(--size-spacing-5);

  &[aria-expanded='true'] {
    color: var(--color-navigation-expanded-item);
  }

  @media (max-width: tokens.$break-mobile-max) {
    padding: var(--size-spacing-2) var(--size-spacing-5) var(--size-spacing-2);
    margin-block-start: var(--size-spacing-3);
    margin-block-end: var(--size-spacing-3);
  }

  @media (min-width: tokens.$break-mobile) {
    position: relative;

    [data-menu-variation='mega'] & {
      border: var(--border-thickness-1) solid transparent;

      .secondary-nav__item--level-0:first-child & {
        padding-left: 0;
      }

      .secondary-nav__item--level-0:last-child & {
        padding-right: 0;
      }
    }

    &[aria-expanded='true'] {
      z-index: 1;
      border-color: var(--color-navigation-border);
      border-bottom-color: var(--color-background);

      [data-menu-variation='mega'] & {
        :first-child > & {
          padding-left: var(--size-spacing-5);
        }

        :last-child > & {
          padding-right: var(--size-spacing-5);
        }
      }
    }
  }
}

.secondary-nav {
  position: relative;

  // Component themes defaults: iterate over each component theme to establish
  // default variables.
  @each $theme, $value in $secondary-nav-component-themes {
    &[data-component-theme='#{$theme}'] {
      // prettier-ignore
      --color-slot-one: var(--component-themes-#{$theme}-slot-one);
      --color-slot-two: var(--component-themes-#{$theme}-slot-two);
      --color-slot-three: var(--component-themes-#{$theme}-slot-three);
      --color-slot-four: var(--component-themes-#{$theme}-slot-four);
      --color-slot-five: var(--component-themes-#{$theme}-slot-five);
      --color-slot-six: var(--component-themes-#{$theme}-slot-six);
      --color-slot-seven: var(--component-themes-#{$theme}-slot-seven);
      --color-slot-eight: var(--component-themes-#{$theme}-slot-eight);

      background-color: var(--color-background);

      .link,
      a {
        --color-text-shadow: var(--color-background);
        --color-link-hover: var(--color-link-hover);
      }

      a:not([data-link-style]) {
        @include atoms.link;

        color: var(--color-link-base);

        &:hover {
          color: var(--color-link-hover);
        }
      }
    }
  }

  // Global themes: set color slots for each theme
  // This establishes `--color-slot-` variables name-spaced to the selector
  // in which it is used. We can map component-level variables to global-level
  // `--color-slot-` variables.
  @each $globalTheme, $value in $global-secondary-nav-themes {
    [data-global-theme='#{$globalTheme}'] & {
      --color-slot-one: var(--global-themes-#{$globalTheme}-colors-slot-one);
      --color-slot-two: var(--global-themes-#{$globalTheme}-colors-slot-two);
      --color-slot-three: var(
        --global-themes-#{$globalTheme}-colors-slot-three
      );
      --color-slot-four: var(--global-themes-#{$globalTheme}-colors-slot-four);
      --color-slot-five: var(--global-themes-#{$globalTheme}-colors-slot-five);
      --color-slot-six: var(--global-themes-#{$globalTheme}-colors-slot-six);
      --color-slot-seven: var(
        --global-themes-#{$globalTheme}-colors-slot-seven
      );
      --color-slot-eight: var(
        --global-themes-#{$globalTheme}-colors-slot-eight
      );
      --color-heading: var(--color-slot-six);
      --color-background: var(--color-slot-eight);
      --color-navigation-border: var(--color-slot-three);
    }
  }

  // Component theme overrides: set specific component themes overrides
  /// define component name spaced variables and map them to global theme slots.
  [data-component-theme='one'] & {
    --color-link-visited-base: var(--color-link-visited-light);
    --color-link-visited-hover: var(--color-link-visited-light-hover);
    --color-link-base: var(--color-slot-eight);
    --color-link-hover: var(--color-slot-eight);
    --color-navigation-border: var(--color-slot-one);
  }

  [data-component-theme='two'] & {
    --color-link-base: var(--color-slot-seven);
    --color-link-hover: var(--color-slot-seven);
    --color-navigation-border: var(--color-slot-two);
  }

  [data-component-theme='three'] & {
    --color-link-visited-base: var(--color-link-visited-light);
    --color-link-visited-hover: var(--color-link-visited-light-hover);
    --color-link-base: var(--color-slot-eight);
    --color-link-hover: var(--color-slot-eight);
    --color-navigation-border: var(--color-slot-three);
  }

  [data-component-theme='four'] & {
    --color-link-visited-base: var(--color-link-visited-light);
    --color-link-visited-hover: var(--color-link-visited-light-hover);
    --color-navigation-border: var(--color-slot-four);
  }

  [data-component-theme='five'] & {
    --color-secondary-nav-theme: var(--color-slot-three);
    --color-secondary-nav-content: var(--color-slot-seven);
    --color-navigation-border: var(--color-slot-five);
  }
}

.secondary-nav__menu {
  @include atoms.list-reset;

  &--level-0 {
    @media (min-width: tokens.$break-mobile) {
      display: flex;
      flex-wrap: wrap;
    }

    [data-menu-variation='basic'] & {
      @media (min-width: tokens.$break-mobile) {
        position: relative;
      }
    }
  }

  &--level-1 {
    @include tokens.animate(max-height, var(--site-header-animation-speed));

    width: 100%;
    overflow: hidden;

    @media (max-width: tokens.$break-mobile-max) {
      // prettier-ignore
      border-left: var(--border-thickness-1) solid var(--color-navigation-border);
      max-height: var(--open-nav-height);
      margin-left: var(--size-spacing-6);
      max-width: calc(100% - var(--size-spacing-6));

      [aria-expanded='true'] ~ & {
        margin-bottom: var(--size-spacing-6);
      }

      [aria-expanded='false'] ~ & {
        @include tokens.animate-hidden(var(--site-header-animation-speed));

        max-height: 0;
      }
    }

    @media (min-width: tokens.$break-mobile) {
      position: absolute;
      background-color: var(--color-background);
      max-width: $secondary-menu-sub-max-width;

      // Subtract enough to place it just behind an "open" toggle and hide the
      // top border. To give it the "tab" effect.
      top: calc(100% - var(--border-thickness-1));

      [aria-expanded='false'] ~ & {
        display: none;
      }
    }

    [data-menu-variation='basic'] & {
      @media (min-width: tokens.$break-mobile) {
        column-count: 1;
        box-shadow: var(--drop-shadow-level-1-bottom-shadow-only);
      }
    }
  }

  &--level-2 {
    margin-left: var(--size-spacing-6);
  }
}

// basic menu variation: border application
@media (min-width: tokens.$break-mobile) {
  .secondary-nav__toggle {
    [data-menu-variation='basic'] :not(:last-child) > & {
      border-top: var(--border-thickness-1) solid transparent;
      border-left: var(--border-thickness-1) solid transparent;
      border-right: var(--border-thickness-1) solid transparent;

      &[aria-expanded='true'] {
        // prettier-ignore
        border-top: var(--border-thickness-1) solid var(--color-navigation-border);
        border-left: var(--border-thickness-1) solid
          var(--color-navigation-border);
        border-right: var(--border-thickness-1) solid
          var(--color-navigation-border);
        border-bottom: var(--border-thickness-1) solid var(--color-background);
      }
    }

    [data-menu-variation='basic'] :last-child > & {
      border-left: var(--border-thickness-1) solid transparent;
      border-right: var(--border-thickness-1) solid transparent;

      &[aria-expanded='true'] {
        border-left: var(--border-thickness-1) solid
          var(--color-navigation-border);
        border-right: var(--border-thickness-1) solid
          var(--color-navigation-border);
      }
    }
  }

  .secondary-nav__menu--level-1 {
    [data-menu-variation='basic'] & {
      padding-top: var(--size-spacing-4);
    }

    [data-menu-variation='basic'] :not(:last-child) > & {
      // prettier-ignore
      border-top: var(--border-thickness-1) solid var(--color-navigation-border);
      border-left: var(--border-thickness-1) solid
        var(--color-navigation-border);
      border-right: var(--border-thickness-1) solid
        var(--color-navigation-border);
      border-bottom: var(--border-thickness-4) solid
        var(--color-navigation-border);
    }

    [data-menu-variation='basic'] :last-child > & {
      right: 0;

      // prettier-ignore
      border-right: var(--border-thickness-1) solid var(--color-navigation-border);
    }
  }
}

.secondary-nav__item {
  &--level-0:not(:last-child) {
    @media (max-width: tokens.$break-mobile-max) {
      border-bottom: var(--border-thickness-1) solid var(--color-gray-200);
    }
  }

  &--level-1 {
    @media (min-width: tokens.$break-mobile) {
      display: block;
      break-inside: avoid-column;
    }
  }

  &--level-2 {
    margin-bottom: var(--size-spacing-5);
  }
}

.secondary-nav__link {
  display: block;
  text-decoration: none;

  &:focus-visible {
    outline-offset: -2px;
  }

  &:hover {
    color: var(--menu-link-color);
    text-decoration: underline;
  }

  &--level-0 {
    @include secondary-nav-item-level-0;

    &.secondary-nav__link--with-sub {
      display: none;
    }
  }

  &--level-1 {
    font: var(--font-style-nav-secondary-1);
    color: var(--color-heading);
    margin-bottom: var(--size-spacing-3);

    [data-menu-variation='mega'] & {
      padding: var(--size-spacing-2) var(--size-spacing-5) var(--size-spacing-2)
        calc(var(--size-spacing-2) + var(--size-spacing-1));
    }

    [data-menu-variation='basic'] & {
      padding: var(--size-spacing-5) var(--size-spacing-6) var(--size-spacing-4);
      position: relative;
      margin-bottom: var(--size-spacing-0);

      // basic menu items have a bottom border
      &::after {
        content: '';
        position: absolute;
        bottom: 0;
        left: var(--size-spacing-5);
        right: var(--size-spacing-5);
        height: var(--border-thickness-1);
        background-color: var(--color-gray-200);
      }

      :last-child > & {
        margin-bottom: 0;
      }

      :first-child > & {
        padding-top: 0;
      }
    }

    // remove last child's bottom border
    [data-menu-variation='basic'] :last-child > &::after {
      content: unset;
    }
  }

  &--level-2 {
    font: var(--font-style-nav-secondary-2);
    color: var(--color-muted);
    padding: var(--size-spacing-2) var(--size-spacing-5) var(--size-spacing-2)
      calc(var(--size-spacing-2) + var(--size-spacing-1));
  }
}

// Active trail styles.
.secondary-nav__link.secondary-nav__link--active {
  color: var(--menu-link-color);
  text-decoration: underline;
  text-decoration-thickness: var(--border-thickness-2);
}

.secondary-nav__link:not(
    .secondary-nav__link--level-0,
    .secondary-nav__link--explore-bar
  ).secondary-nav__link--active {
  position: relative;
  border-left: var(--border-thickness-4) solid var(--color-navigation-border);

  &::before {
    content: ' ';
    display: block;
    position: absolute;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    opacity: var(--color-navigation-active-item-link-opacity);
    background-color: var(--color-navigation-active-item-link-background);
  }

  @media (max-width: tokens.$break-mobile-max) {
    // prettier-ignore
    border-left: var(--border-thickness-2) solid var(--color-navigation-border);
  }
}

.secondary-nav__toggle {
  @include atoms.button-reset;

  display: flex;
  align-items: center;
  width: 100%;
  gap: var(--size-spacing-3);

  &:focus-visible {
    outline-offset: -2px;
  }

  &:hover {
    color: var(--menu-link-color);
  }

  &--level-0 {
    @include secondary-nav-item-level-0;
  }
}

.secondary-nav__toggle-icon {
  @include tokens.animate;

  height: 1em;
  width: 1em;

  .secondary-nav__toggle[aria-expanded='true'] > & {
    transform: rotate(180deg);
  }
}
