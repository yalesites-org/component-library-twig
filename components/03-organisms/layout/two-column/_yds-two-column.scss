@use '../../../00-tokens/tokens';

$break-layout-two-column: tokens.$break-2xl;
$break-layout-two-column-max: $break-layout-two-column - 0.05;

.yds-two-column {
  @include tokens.spacing-page-section;
}

.yds-two-column__inner {
  @media (min-width: $break-layout-two-column) {
    display: flex;
    justify-content: space-between;
    align-items: flex-start;
  }

  // Flex sets `min-width` of children to `auto` by default... but this breaks
  // some of our base layout styles (causes horizontal scrolling), so we need to
  // reset it to `0`.
  > * {
    min-width: 0;

    // Then, some of our components that are intended to be "full-page-width"
    // will expand outside of the layout columns, so we need to set a max-width
    // on those to keep them contained within the section columns.
    > * {
      max-width: 100%;
    }
  }
}

.yds-two-column__primary {
  @media (max-width: $break-layout-two-column-max) {
    margin-bottom: var(--spacing-page-inner);
  }

  @media (min-width: $break-layout-two-column) {
    flex: 1 0 var(--size-component-layout-width-content);
  }
}

.yds-two-column__secondary {
  @media (max-width: $break-layout-two-column-max) {
    border-top: var(--thickness-divider) solid var(--color-divider);
    padding-top: var(--spacing-page-inner);
  }

  @media (min-width: $break-layout-two-column) {
    flex: 0 1 calc(37.5rem + var(--spacing-component-gutter));
    border-left: var(--thickness-divider) solid var(--color-divider);
    margin-left: calc(var(--spacing-component-gutter) * 2);
    padding-left: var(--spacing-component-gutter);
  }
}
