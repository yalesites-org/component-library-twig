@use '../../00-tokens/functions/map';
@use '../../00-tokens/tokens';

$site-header-themes: map.deep-get(tokens.$tokens, site-header-themes);
$site-header-border-thickness: map.deep-get(tokens.$tokens, border, thickness);
$site-header-layout: map.deep-get(tokens.$tokens, 'site-header-layout');
$global-site-themes: map.deep-get(tokens.$tokens, 'global-themes');
$site-max-width: 84rem;
$background-image-max-width: 100rem;

:root {
  --site-header-animation-speed: var(--animation-speed-slow);
}

// Mixin for the small branding typography.
@mixin branding-small {
  font: var(--font-style-branding-yale);
  color: var(--color-site-header-yale-branding);
}

// Department/site name on mobile
@mixin branding-small-mobile {
  font: var(--font-style-branding-site-mobile);
  color: var(--color-site-header-yale-branding);
}

.site-header {
  // prettier-ignore
  --site-header-border-bottom: var(--site-header-border-thickness) solid var(--color-site-header-border-color);

  // prettier-ignore
  --site-header-mobile-border-bottom: var(--site-header-mobile-border-thickness, var(--site-header-border-thickness)) solid var(--color-site-header-border-color);
  --color-text-shadow: var(--color-basic-white);

  position: relative;
  z-index: 2;

  // Component themes defaults: iterate over each component theme to establish
  // default variables.
  @each $theme, $value in $site-header-themes {
    &[data-header-theme='#{$theme}'] {
      // prettier-ignore
      --color-site-header-yale-branding: var(--site-header-themes-#{$theme}-yale-branding);

      // prettier-ignore
      --color-site-header-site-branding: var(--site-header-themes-#{$theme}-site-branding);

      // prettier-ignore
      --color-site-header-border-color: var(--site-header-themes-#{$theme}-border-color);

      // prettier-ignore
      --color-site-header-divider-color: var(--site-header-themes-#{$theme}-divider-color);

      // re-map general variables to name spaced variables.
      --color-slot-one: var(--site-header-themes-#{$theme}-slot-one);
      --color-slot-two: var(--site-header-themes-#{$theme}-slot-two);
      --color-slot-three: var(--site-header-themes-#{$theme}-slot-three);
      --color-slot-four: var(--site-header-themes-#{$theme}-slot-four);
      --color-slot-five: var(--site-header-themes-#{$theme}-slot-five);
      --color-slot-six: var(--site-header-themes-#{$theme}-slot-six);
      --color-slot-seven: var(--site-header-themes-#{$theme}-slot-seven);
      --color-slot-eight: var(--site-header-themes-#{$theme}-slot-eight);
      --color-action: var(--color-site-header-theme-action);
      --color-action-secondary: var(--color-site-header-theme-action-secondary);

      // prettier-ignore
      --color-site-header-background: var(--site-header-themes-#{$theme}-background);
      --color-text: var(--color-site-header-text);
      --color-heading: var(--color-site-header-text);
      --color-link-base: var(--color-site-header-text);
      --color-link-hover: var(--color-site-header-link-hover);
      --menu-link-color: var(--color-site-header-link-hover);
      --color-navigation-border: var(--color-site-header-border-color);
      --color-background: var(--color-site-header-background);

      // set default background and text colors.
      background-color: var(--color-site-header-background);
      color: var(--color-site-header-text);
      border-color: var(--color-site-header-border-color);
    }
  }

  // Global themes: set color slots for each theme
  // This establishes `--color-slot-` variables name-spaced to the selector
  // in which it is used. We can map component-level variables to global-level
  // `--color-slot-` variables.
  @each $globalTheme, $value in $global-site-themes {
    [data-global-theme='#{$globalTheme}'] & {
      --color-slot-one: var(--global-themes-#{$globalTheme}-colors-slot-one);
      --color-slot-two: var(--global-themes-#{$globalTheme}-colors-slot-two);
      --color-slot-three: var(
        --global-themes-#{$globalTheme}-colors-slot-three
      );
      --color-slot-four: var(--global-themes-#{$globalTheme}-colors-slot-four);
      --color-slot-five: var(--global-themes-#{$globalTheme}-colors-slot-five);
      --color-slot-six: var(--global-themes-#{$globalTheme}-colors-slot-six);
      --color-slot-seven: var(
        --global-themes-#{$globalTheme}-colors-slot-seven
      );
      --color-slot-eight: var(
        --global-themes-#{$globalTheme}-colors-slot-eight
      );
    }
  }

  // Component theme overrides: set specific component themes overrides
  /// define component name spaced variables and map them to global theme slots.
  &[data-header-theme='one'] {
    --color-site-header-border-color: var(--color-slot-one);
    --color-site-header-background: var(--color-basic-white);
    --color-site-header-text: var(--color-gray-800);
    --color-site-header-link-hover: var(--color-slot-two);
    --color-site-header-theme-action: var(--color-slot-two);
    --color-site-header-theme-action-secondary: var(--color-basic-white);
    --color-muted: var(--color-gray-600);
    --color-navigation-expanded-item: var(--color-gray-600);
  }

  &[data-header-theme='two'] {
    --color-site-header-border-color: var(--color-slot-three);
    --color-site-header-background: var(--color-gray-800);
    --color-site-header-text: var(--color-basic-white);
    --color-site-header-link-hover: var(--color-slot-four);
    --color-site-header-yale-branding: var(--color-basic-white);
    --color-site-header-theme-action: var(--color-slot-four);
    --color-site-header-theme-action-secondary: var(--color-gray-800);
    --color-muted: var(--color-gray-300);
    --color-navigation-expanded-item: var(--color-gray-300);
  }

  &[data-header-theme='three'] {
    --color-site-header-border-color: var(--color-slot-three);
    --color-site-header-background: var(--color-blue-yale);
    --color-site-header-divider-color: var(--color-basic-white);
    --color-site-header-text: var(--color-basic-white);
    --color-site-header-link-hover: var(--color-slot-four);
    --color-site-header-yale-branding: var(--color-basic-white);
    --color-site-header-theme-action: var(--color-slot-four);
    --color-site-header-theme-action-secondary: var(--color-gray-800);
    --color-muted: var(--color-gray-300);
    --color-navigation-expanded-item: var(--color-gray-300);
  }

  // Header accents
  // Set border colors for each accent
  &[data-header-accent='one'] {
    --color-site-header-border-color: var(--color-slot-one);
  }

  &[data-header-accent='two'] {
    --color-site-header-border-color: var(--color-slot-two);
  }

  &[data-header-accent='three'] {
    --color-site-header-border-color: var(--color-slot-three);
  }

  &[data-header-accent='four'] {
    --color-site-header-border-color: var(--color-slot-four);
  }

  &[data-header-accent='five'] {
    --color-site-header-border-color: var(--color-slot-five);
  }

  &[data-header-accent='six'] {
    --color-site-header-border-color: var(--color-slot-six);
  }

  &[data-header-accent='seven'] {
    --color-site-header-border-color: var(--color-slot-seven);
  }

  &[data-header-accent='eight'] {
    --color-site-header-border-color: var(--color-slot-eight);
  }

  // Border bottom thickness
  @each $thickness, $value in $site-header-border-thickness {
    &[data-site-header-border-thickness='#{$thickness}'] {
      --site-header-border-thickness: var(--border-thickness-#{$thickness});

      @if $thickness == '0' {
        // prettier-ignore
        --site-header-mobile-border-thickness: var(--border-thickness-hairline);
      } @else if $thickness == '8' or $thickness == '6' {
        --site-header-mobile-border-thickness: var(--border-thickness-4);
      }
    }
  }

  @media (max-width: tokens.$break-mobile-max) {
    padding: 0;
  }

  @media (min-width: tokens.$break-mobile) {
    border-bottom: var(--site-header-border-bottom);
  }

  &[data-site-header-with-background-image] {
    background-color: transparent;
    border-bottom: unset;

    @media (min-width: tokens.$break-mobile) {
      display: grid;
      grid-template: 'header';
      width: 100%;
      max-width: 100%;
    }

    @media (min-width: $background-image-max-width) {
      max-width: 150rem; // 2400px
      padding: 0;
      margin: 0 auto;
    }
  }
}

.site-header__mobile-header {
  position: relative;
  z-index: 1;
  display: flex;
  gap: var(--size-spacing-6);
  justify-content: space-between;
  align-items: center;
  padding: var(--size-spacing-4) var(--size-spacing-site-gutter);
  background-color: var(--color-background);
  border-bottom: var(--site-header-border-bottom);
  margin-inline-start: calc(var(--size-spacing-site-gutter) * -1);
  margin-inline-end: calc(var(--size-spacing-site-gutter) * -1);

  @media (min-width: tokens.$break-mobile) {
    display: none;
  }
}

.site-header__menu-wrapper {
  display: flex;
  flex-direction: column;

  @media (max-width: tokens.$break-mobile-max) {
    @include tokens.animate(transform, var(--site-header-animation-speed));

    position: absolute;
    left: 0;
    background: var(--color-background);
    max-height: calc(100vh - var(--header-height-mobile));
    width: 100vw;
    max-width: 100%;
    overflow: auto;
    border-bottom: var(--site-header-mobile-border-bottom);
    transform: translateY(0%);

    [data-main-menu-state='closed'] & {
      @include tokens.animate-hidden(var(--site-header-animation-speed));

      transform: translateY(-100%);
    }

    // when it's a simple menu with an image we need to set a min-height
    [data-site-header-type='focus'][data-site-header-with-background-image] & {
      min-height: var(--header-height-mobile);
    }
  }
}

.site-header__menu-secondary {
  &--desktop {
    @media (max-width: tokens.$break-mobile-max) {
      display: none;
    }
  }

  &--mobile {
    @media (min-width: tokens.$break-mobile) {
      display: none;
    }
  }
}

.site-header__secondary {
  display: flex;
  flex-wrap: wrap;
  gap: var(--size-spacing-6);
  justify-content: space-between;
  align-items: center;
  padding: var(--size-spacing-4) 0;

  @media (max-width: tokens.$break-mobile-max) {
    padding: var(--size-spacing-6) var(--size-spacing-site-gutter);
    border-top: var(--site-header-mobile-border-bottom);
  }

  @media (min-width: tokens.$break-mobile) {
    // prettier-ignore
    border-bottom: var(--border-thickness-hairline) solid var(--color-site-header-divider-color);
  }
}

.site-header__primary {
  display: flex;
  flex-flow: var(--site-header-flex-direction) wrap;
  gap: var(--size-spacing-6);
  padding: var(--size-spacing-7) 0 var(--size-spacing-6);
  justify-content: var(--site-header-layout-justify);
  align-items: var(--site-header-layout-align);

  // Primary nav position
  @each $layout, $value in $site-header-layout {
    [data-site-header-nav-position='#{$layout}'] & {
      // prettier-ignore
      --site-header-flex-direction: var(--site-header-layout-#{$layout}-flex-direction);

      // prettier-ignore
      --site-header-layout-justify: var(--site-header-layout-#{$layout}-justify);
      --site-header-layout-align: var(--site-header-layout-#{$layout}-align);
    }
  }

  @media (max-width: tokens.$break-mobile-max) {
    padding: var(--size-spacing-3) var(--size-spacing-site-gutter);
  }
}

.site-header__yale-branding {
  @include branding-small;

  text-decoration: none;

  @media (max-width: tokens.$break-mobile-max) {
    display: none;
  }
}

.site-header__utility-nav {
  margin-left: auto;

  @media (max-width: tokens.$break-mobile-max) {
    width: 100%;
  }
}

.site-header__site-branding {
  font: var(--font-style-branding-site);
  color: var(--color-site-header-site-branding);
  text-decoration: none;

  &--primary {
    @media (max-width: tokens.$break-mobile-max) {
      display: none;
    }
  }

  // if right alignment, limit the branding width
  @media (min-width: tokens.$break-mobile) {
    [data-site-header-nav-position='right'] & {
      max-width: 36.5%;
    }
  }

  &--mobile {
    @include branding-small-mobile;

    max-width: 80%;
  }
}

.site-header__primary-nav {
  @media (max-width: tokens.$break-mobile-max) {
    width: 100%;
  }

  @media (min-width: tokens.$break-mobile) {
    [data-site-header-nav-position='center'] & {
      width: 100%;
    }

    [data-site-header-nav-position='right'] & {
      margin-left: auto;
    }

    [data-site-header-type='focus'] & {
      align-self: center;
    }
  }
}

.site-header__overlay {
  position: fixed;
  z-index: 1;
  left: 0;
  top: 0;
  height: 0;
  width: 100vw;
  background-color: rgb(0 0 0 / 70%);
  opacity: 0;

  // The animate mixin doesn't support multiple transitions.
  @media (prefers-reduced-motion: no-preference) {
    transition: opacity calc(var(--site-header-animation-speed) / 2) ease-in-out
        calc(var(--site-header-animation-speed) / 2),
      height 0ms ease-in-out var(--site-header-animation-speed);
  }

  @media (max-width: tokens.$break-mobile-max) {
    [data-main-menu-state='open'] ~ & {
      @include tokens.animate(opacity, var(--site-header-animation-speed));

      height: 100vh;
      opacity: 1;
    }
  }
}

.site-header__inner {
  [data-site-header-type='focus'][data-site-header-with-background-image] & {
    @media (min-width: tokens.$break-mobile) {
      grid-area: container;
      z-index: 2;
      width: 100%;
      max-width: 84rem;
    }
  }
}

// Image
.site-header__image {
  position: relative;

  // pull image into the site margins, full-bleed
  margin-left: calc(var(--size-spacing-site-gutter) * -1);
  margin-right: calc(var(--size-spacing-site-gutter) * -1);

  [data-main-menu-state='open'] & {
    z-index: -1;
    opacity: 0.1;
  }

  // make image width and height take up the full screen at resolutions
  // greater than mobile
  @media (min-width: tokens.$break-mobile) {
    > * {
      object-fit: cover;
      height: 100vh;
      width: 100vw;
    }
  }

  @media (min-width: tokens.$break-mobile) {
    grid-area: container;
    z-index: 0;

    &::before {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      background-image: linear-gradient(
        var(--color-site-header-background) 15%,
        transparent 100%
      );
      width: 100%;
      height: 100%;
      z-index: 1;

      @media (min-width: $site-max-width) {
        background-image: linear-gradient(
          var(--color-site-header-background) 10%,
          transparent 100%
        );
      }
    }
  }
}

// Site Name is Logo/SVG
.site-header__site-branding-logo {
  [data-site-header-site-name-is-image] & {
    &--desktop {
      > * {
        height: auto;
        max-height: 200px;
        max-width: 200px;
      }

      @media (max-width: tokens.$break-mobile-max) {
        display: none;
      }
    }

    &--mobile {
      > * {
        max-height: 100px;
      }

      @media (min-width: tokens.$break-mobile) {
        display: none;
      }
    }
  }
}
