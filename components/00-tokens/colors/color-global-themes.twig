{% set color_global_theme__base_class = 'cl-color-global-themes' %}
{% set colors__base_class = "cl-colors" %}

<div {{ bem('wrap', [], color_global_theme__base_class) }}>
  <div class="text-field" data-component-alignment="left" data-component-width="max">
    <div class="text-field__inner">
      <div class="text">
        <h1>These are global themes.</h1> 
        <p>
          Each theme is defined in the tokens repository: <code>atomic/node_modules/@yalesites-org/tokens/tokens/base/color.yml</code>. Each theme has a generic numerical name. If you were to add another global theme, it should follow the same naming convention. For example: <code>six</code> - "Purple Dream". Following this example, each theme's non-numerical name (e.g. "Purple Dream") is added in this <code>color-global-themes.twig</code> file. The text label is stored in a <code>label</code> key value for each theme.
        </p>
        <p>
          Each theme defines "color slots", which get mapped to color slots to be used by component themes (dials).
        </p>
      </div>
    </div>
  </div>
</div>

{% for globalTheme, values in _context.globalThemes %}
  <div {{ bem(color_global_theme__base_class) }} data-global-theme={{ globalTheme }}>
    <h2>{{globalTheme|capitalize}}: "{{values.label}}"</h2>
    <div {{ bem('colors', [], color_global_theme__base_class) }}>
      <ul {{ bem('list', [], colors__base_class) }}>
        {% for colors in values %}
          {% for color, colorset in colors %}
            {% if colorset is iterable %}
              {% for nested_color, nested_value in colorset %}
                <li {{ bem("item", [], colors__base_class) }} style="background: var(--global-themes-{{globalTheme}}-colors-{{ nested_color }});">
                  <span {{ bem("title", [], colors__base_class) }}>--global-themes-{{globalTheme}}-colors-{{ nested_color }}</span>
                </li>
              {% endfor %}
            {% else %}
              <li {{ bem("item", [], colors__base_class) }} style="background: var(--global-themes-{{globalTheme}}-colors-{{color}});">
                <span {{ bem("title", [], colors__base_class) }}>--global-themes-{{globalTheme}}-colors-{{ color }}</span>
              </li>
            {% endif %}
          {% endfor %}
        {% endfor %}
      </ul>
    </div>
  </div>
{% endfor %}
